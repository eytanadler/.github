parameters:
- name: REPO_NAME
  type: string
- name: IGNORE_STYLE
  type: boolean
  default: false
- name: COMPLEX
  type: boolean
  default: false
- name: GCC_CONFIG
  type: string
  default: empty
- name: INTEL_CONFIG
  type: string
  default: empty
- name: BUILD_REAL
  type: string
  default: .github/build_real.sh
- name: TEST_REAL
  type: string
  default: .github/test_real.sh
- name: BUILD_COMPLEX
  type: string
  default: .github/build_complex.sh
- name: TEST_COMPLEX
  type: string
  default: .github/test_complex.sh
- name: IMAGE
  type: string
  default: public
- name: PYPI
  type: boolean
  default: false

stages:
- stage: Test_Real
  dependsOn: []
  displayName: Test Real
  jobs:
  - template: azure_build.yaml
    parameters:
      REPO_NAME: ${{ parameters.REPO_NAME }}
      GCC_CONFIG: ${{ parameters.GCC_CONFIG }}
      INTEL_CONFIG: ${{ parameters.INTEL_CONFIG }}
      BUILD: ${{ parameters.BUILD_REAL }}
      TEST: ${{ parameters.TEST_REAL }}
      IMAGE: ${{ parameters.IMAGE }}

- stage: Test_Complex
  dependsOn: []
  displayName: Test Complex
  condition: eq(${{ parameters.COMPLEX }}, true)
  jobs:
  - template: azure_build.yaml
    parameters:
      REPO_NAME: ${{ parameters.REPO_NAME }}
      GCC_CONFIG: ${{ parameters.GCC_CONFIG }}
      INTEL_CONFIG: ${{ parameters.INTEL_CONFIG }}
      BUILD: ${{ parameters.BUILD_COMPLEX }}
      TEST: ${{ parameters.TEST_COMPLEX }}
      IMAGE: ${{ parameters.IMAGE }}

- stage: Style
  dependsOn: []
  displayName: Style
  jobs:
  - template: azure_style.yaml
    parameters:
      REPO_NAME: ${{ parameters.REPO_NAME }}
      IGNORE_STYLE: ${{ parameters.IGNORE_STYLE }}

# - stage:
#   dependsOn:
#   - Test_Real
#   # - Test_Complex address at later date (if needed)
#   - Style
#   displayName: PyPI
#   condition: and(succeeded(), eq(${{ parameters.PYPI }}, true), contains(variables['build.sourceBranch'], 'tags'))
#   jobs:
#   - job:
#     steps:
#     - task: UsePythonVersion@0
#       inputs:
#         versionSpec: '3.8'
#     - script: |
#         python3 --version
#         python3 -m pip install -U pip
#         echo ${{ variables['Build.Reason'] }}
#         pip3 install setuptools wheel twine
#         python3 setup.py bdist_wheel
#     - task: TwineAuthenticate@1
#       displayName: 'Twine Authenticate'
#       inputs:
#         pythonUploadServiceConnection: Test_PyPI
#     - script: python3 -m twine upload -r "baseclasses" --config-file $(PYPIRC_PATH) dist/*.whl